{"ast":null,"code":"var _jsxFileName = \"/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu.js\";\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { animated, useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Link } from \"react-scroll\";\nimport './style.scss';\nconst MenuContainer = styled(animated.div)`\n  position: fixed;\n  width: 100%;\n  heigth: 100%;\n  z-index: 1;\n`;\nconst Nav = styled(animated.nav)`\n  background: rgb(244, 245, 248);\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\nconst Li = styled(animated.li)`\n  list-style: none;\n  padding-bottom: 1.5em;\n\n  a {\n    font-family: 'Roboto Slab';\n    font-weight: 600;\n    font-size: 2.5em;\n    color: #30333d;\n    font-size: 50px;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n  a:hover {\n    color: #f35252;\n  }\n`;\nconst menuItems = [{\n  name: 'About',\n  link: '/'\n}, {\n  name: 'Projects',\n  link: '/projects/'\n}, {\n  name: 'Skills',\n  link: '/skills/'\n}, {\n  name: 'Experience',\n  link: '/experience/'\n}, {\n  name: 'Contacts',\n  link: '/contacts/'\n}];\n\nfunction NavBarMenu() {\n  const [showMenu, setShowMenu] = useState(true);\n\n  const toggleMenu = () => setShowMenu(!showMenu); // Set refs - required for useChain\n\n\n  const navRef = useRef();\n  const liRef = useRef(); // Setup animation for nav element\n\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: {\n      height: '0vh'\n    },\n    to: {\n      height: showMenu ? '100vh' : '0vh'\n    }\n  }); // Setup animations for nav items\n\n  const liTransitions = useTransition(showMenu ? menuItems : [], item => item.name, {\n    ref: liRef,\n    trail: 500 / menuItems.length,\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translateY(0px)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    }\n  }); // On showMenu, start with nav animationm then nav items\n\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [0, showMenu ? 0.5 : 0.6]);\n  return /*#__PURE__*/React.createElement(MenuContainer, {\n    className: \"menu-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"menu\",\n    style: springProps,\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-item\",\n    activeClass: \"active\",\n    to: \"about\",\n    spy: true,\n    smooth: true,\n    offset: 0,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"link-item\",\n    activeClass: \"active\",\n    to: \"projects\",\n    spy: true,\n    smooth: true,\n    offset: 70,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 2\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"link-item\",\n    activeClass: \"active\",\n    to: \"contacts\",\n    spy: true,\n    smooth: true,\n    offset: 0,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }\n  }, \"Contacts\")));\n}\n\nexport default NavBarMenu;","map":{"version":3,"sources":["/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu.js"],"names":["React","useState","useRef","styled","animated","useTransition","useSpring","useChain","config","Link","MenuContainer","div","Nav","nav","Li","li","menuItems","name","link","NavBarMenu","showMenu","setShowMenu","toggleMenu","navRef","liRef","springProps","ref","default","from","height","to","liTransitions","item","trail","length","opacity","transform","enter","leave"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { animated, useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Link } from \"react-scroll\";\n\nimport './style.scss';\n\nconst MenuContainer = styled(animated.div)`\n  position: fixed;\n  width: 100%;\n  heigth: 100%;\n  z-index: 1;\n`;\n\nconst Nav = styled(animated.nav)`\n  background: rgb(244, 245, 248);\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst Li = styled(animated.li)`\n  list-style: none;\n  padding-bottom: 1.5em;\n\n  a {\n    font-family: 'Roboto Slab';\n    font-weight: 600;\n    font-size: 2.5em;\n    color: #30333d;\n    font-size: 50px;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n  a:hover {\n    color: #f35252;\n  }\n`;\n\nconst menuItems = [\n  { name: 'About', link: '/' },\n  { name: 'Projects', link: '/projects/' },\n  { name: 'Skills', link: '/skills/' },\n  { name: 'Experience', link: '/experience/' },\n  { name: 'Contacts', link: '/contacts/' },\n];\n\nfunction NavBarMenu() {\n  const [showMenu, setShowMenu] = useState(true);\n\n  const toggleMenu = () => setShowMenu(!showMenu);\n\n  // Set refs - required for useChain\n  const navRef = useRef();\n  const liRef = useRef();\n\n  // Setup animation for nav element\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: { height: '0vh' },\n    to: { height: showMenu ? '100vh' : '0vh' },\n  });\n\n  // Setup animations for nav items\n  const liTransitions = useTransition(showMenu ? menuItems : [], (item) => item.name, {\n    ref: liRef,\n    trail: 500 / menuItems.length,\n    from: { opacity: 0, transform: 'translateY(20px)' },\n    enter: { opacity: 1, transform: 'translateY(0px)' },\n    leave: { opacity: 0, transform: 'translateY(20px)' },\n  });\n\n  // On showMenu, start with nav animationm then nav items\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [0, showMenu ? 0.5 : 0.6]);\n\n  return (\n    <MenuContainer className=\"menu-container\">\n      <Nav className=\"menu\" style={springProps} onClick={toggleMenu}>\n        {/* <ul>\n          {liTransitions.map(({ item, key, props }) => (\n            <Li key={key} style={props}>\n              <a href={item.link}>{item.name}</a>\n            </Li>\n          ))}\n        </ul> */}\n        <Link\n        className=\"link-item\"\n    activeClass=\"active\"\n    to=\"about\"\n    spy={true}\n    smooth={true}\n    offset={0}\n    duration= {500}\n    \n>About</Link>\n <Link\n      className=\"link-item\"\n    activeClass=\"active\"\n    to=\"projects\"\n    spy={true}\n    smooth={true}\n    offset={70}\n    duration= {500}\n>Projects</Link>\n         <Link\n              className=\"link-item\"\n    activeClass=\"active\"\n    to=\"contacts\"\n    spy={true}\n    smooth={true}\n    offset={0}\n    duration= {500}\n>Contacts</Link>\n      </Nav>\n    </MenuContainer>\n  );\n}\n\nexport default NavBarMenu;\n"]},"metadata":{},"sourceType":"module"}