{"ast":null,"code":"var _jsxFileName = \"/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu2.js\";\nimport React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { animated, useTransition, useSpring, useChain, config } from 'react-spring';\nimport BurgerMenu from './BurgerMenu'; // import 'normalize-css';\n\nconst Button = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\nconst Nav = styled(animated.nav)`\n  background: rgb(244, 245, 248);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\nconst Li = styled(animated.li)`\n  list-style: none;\n\n  a {\n    color: #7d9ba8;\n    font-size: 50px;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n`;\nconst menuItems = [{\n  name: 'About',\n  link: '/'\n}, {\n  name: 'Projects',\n  link: '/projects/'\n}, {\n  name: 'Skills',\n  link: '/skills/'\n}, {\n  name: 'Skills',\n  link: '/contact/'\n}];\n\nconst NavBarMenu2 = props => {\n  const [showMenu, setShowMenu] = useState(true);\n\n  const toggleMenu = () => setShowMenu(!showMenu); // Set refs - required for useChain\n\n\n  const navRef = useRef();\n  const liRef = useRef(); // Setup animation for nav element\n\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: {\n      width: '0%'\n    },\n    to: {\n      width: showMenu ? '100%' : '0%'\n    }\n  }); // Setup animations for nav items\n\n  const liTransitions = useTransition(showMenu ? menuItems : [], item => item.name, {\n    ref: liRef,\n    trail: 400 / menuItems.length,\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    }\n  }); // On showMenu, start with nav animationm then nav items\n\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [0, showMenu ? 0.4 : 0.6]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BurgerMenu, {\n    onClick: toggleMenu,\n    menuActive: props.menuActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Nav, {\n    className: \"menu\",\n    style: springProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, liTransitions.map(({\n    item,\n    key,\n    props\n  }) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, item.name))))));\n};\n\nexport default NavBarMenu2;","map":{"version":3,"sources":["/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu2.js"],"names":["React","useState","useRef","ReactDOM","styled","animated","useTransition","useSpring","useChain","config","BurgerMenu","Button","button","Nav","nav","Li","li","menuItems","name","link","NavBarMenu2","props","showMenu","setShowMenu","toggleMenu","navRef","liRef","springProps","ref","default","from","width","to","liTransitions","item","trail","length","opacity","transform","enter","leave","menuActive","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { animated, useTransition, useSpring, useChain, config } from 'react-spring';\nimport BurgerMenu from './BurgerMenu'\n// import 'normalize-css';\n\nconst Button = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\nconst Nav = styled(animated.nav)`\n  background: rgb(244, 245, 248);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst Li = styled(animated.li)`\n  list-style: none;\n\n  a {\n    color: #7d9ba8;\n    font-size: 50px;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n`;\n\nconst menuItems = [\n  { name: 'About', link: '/' },\n  { name: 'Projects', link: '/projects/' },\n  { name: 'Skills', link: '/skills/' },\n  { name: 'Skills', link: '/contact/' },\n];\n\nconst NavBarMenu2 = (props) => {\n\n  const [showMenu, setShowMenu] = useState(true);\n  const toggleMenu = () => setShowMenu(!showMenu);\n\n  // Set refs - required for useChain\n  const navRef = useRef();\n  const liRef = useRef();\n\n  // Setup animation for nav element\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: { width: '0%' },\n    to: { width: showMenu ? '100%' : '0%' },\n  });\n\n  // Setup animations for nav items\n  const liTransitions = useTransition(showMenu ? menuItems : [], (item) => item.name, {\n    ref: liRef,\n    trail: 400 / menuItems.length,\n    from: { opacity: 0, transform: 'translateY(20px)' },\n    enter: { opacity: 1, transform: 'translateY(0)' },\n    leave: { opacity: 0, transform: 'translateY(20px)' },\n  });\n\n  // On showMenu, start with nav animationm then nav items\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [0, showMenu ? 0.4 : 0.6]);\n\n  return (\n    <>\n      {/* <Button onClick={toggleMenu}><BurgerMenu /></Button> */}\n      <BurgerMenu onClick={toggleMenu} menuActive={props.menuActive}/>\n      <Nav className=\"menu\" style={springProps}>\n        <ul>\n          {liTransitions.map(({ item, key, props }) => (\n            <Li key={key} style={props}>\n              <a href={item.link}>{item.name}</a>\n            </Li>\n          ))}\n        </ul>\n      </Nav>\n    </>\n  );\n};\n\nexport default NavBarMenu2;\n"]},"metadata":{},"sourceType":"module"}