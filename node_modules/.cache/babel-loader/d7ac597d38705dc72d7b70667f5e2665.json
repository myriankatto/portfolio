{"ast":null,"code":"var _jsxFileName = \"/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu2.js\";\nimport React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { animated, useTransition, useSpring, useChain, config } from 'react-spring';\nimport 'normalize-css';\nconst Button = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\nconst Nav = styled(animated.nav)`\n  background: pink;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\nconst Li = styled(animated.li)`\n  list-style: none;\n\n  a {\n    color: #7d9ba8;\n    font-size: 50px;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n`;\nconst menuItems = [{\n  name: 'Home',\n  link: '/'\n}, {\n  name: 'About',\n  link: '/about/'\n}, {\n  name: 'Contact',\n  link: '/contact/'\n}];\n\nconst Menu = () => {\n  const [showMenu, setShowMenu] = useState(true);\n\n  const toggleMenu = () => setShowMenu(!showMenu); // Set refs - required for useChain\n\n\n  const navRef = useRef();\n  const liRef = useRef(); // Setup animation for nav element\n\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: {\n      width: '0%'\n    },\n    to: {\n      width: showMenu ? '100%' : '0%'\n    }\n  }); // Setup animations for nav items\n\n  const liTransitions = useTransition(showMenu ? menuItems : [], item => item.name, {\n    ref: liRef,\n    trail: 400 / menuItems.length,\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    }\n  }); // On showMenu, start with nav animationm then nav items\n\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [0, showMenu ? 0.4 : 0.6]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Toggle Menu\"), /*#__PURE__*/React.createElement(Nav, {\n    className: \"menu\",\n    style: springProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, liTransitions.map(({\n    item,\n    key,\n    props\n  }) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, item.name))))));\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(Menu, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/NavBar/NavBarMenu2.js"],"names":["React","useState","useRef","ReactDOM","styled","animated","useTransition","useSpring","useChain","config","Button","button","Nav","nav","Li","li","menuItems","name","link","Menu","showMenu","setShowMenu","toggleMenu","navRef","liRef","springProps","ref","default","from","width","to","liTransitions","item","trail","length","opacity","transform","enter","leave","map","key","props","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport {\n  animated,\n  useTransition,\n  useSpring,\n  useChain,\n  config\n} from 'react-spring'\nimport 'normalize-css'\n\nconst Button = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`\nconst Nav = styled(animated.nav)`\n  background: pink;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`\n\nconst Li = styled(animated.li)`\n  list-style: none;\n\n  a {\n    color: #7d9ba8;\n    font-size: 50px;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-decoration: none;\n    line-height: 1.3;\n  }\n`\n\nconst menuItems = [\n  { name: 'Home', link: '/' },\n  { name: 'About', link: '/about/' },\n  { name: 'Contact', link: '/contact/' }\n]\n\nconst Menu = () => {\n  const [showMenu, setShowMenu] = useState(true)\n  const toggleMenu = () => setShowMenu(!showMenu)\n\n  // Set refs - required for useChain\n  const navRef = useRef()\n  const liRef = useRef()\n\n  // Setup animation for nav element\n  const springProps = useSpring({\n    ref: navRef,\n    config: config.default,\n    from: { width: '0%' },\n    to: { width: showMenu ? '100%' : '0%' }\n  })\n\n  // Setup animations for nav items\n  const liTransitions = useTransition(\n    showMenu ? menuItems : [],\n    item => item.name,\n    {\n      ref: liRef,\n      trail: 400 / menuItems.length,\n      from: { opacity: 0, transform: 'translateY(20px)' },\n      enter: { opacity: 1, transform: 'translateY(0)' },\n      leave: { opacity: 0, transform: 'translateY(20px)' }\n    }\n  )\n\n  // On showMenu, start with nav animationm then nav items\n  useChain(showMenu ? [navRef, liRef] : [liRef, navRef], [\n    0,\n    showMenu ? 0.4 : 0.6\n  ])\n\n  return (\n    <>\n      <Button onClick={toggleMenu}>Toggle Menu</Button>\n      <Nav className=\"menu\" style={springProps}>\n        <ul>\n          {liTransitions.map(({ item, key, props }) => (\n            <Li key={key} style={props}>\n              <a href={item.link}>{item.name}</a>\n            </Li>\n          ))}\n        </ul>\n      </Nav>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<Menu />, rootElement)\n"]},"metadata":{},"sourceType":"module"}