{"ast":null,"code":"var _jsxFileName = \"/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/HeaderText.js\";\n// import React from 'react';\n// import Typewriter from 'typewriter-effect';\n// export default function Header() {\n//   return (\n//     <div className=\"header-text\">\n//       {/* <h2>\n//         Full Stack Web Developer focused on\n//         <span><Typewriter\n//           options={{\n//             strings: [\n//               'user experiences.',\n//               'new technologies.',\n//               'creative solutions.',\n//               'attention to details.',\n//             ],\n//             autoStart: true,\n//             loop: true,\n//             wrapperClassName: 'typewriter-text',\n//           }}\n//         /></span>\n//       </h2> */}\n//       <h2>\n//         <Typewriter\n//           onInit={(typewriter) => {\n//             typewriter\n//               .typeString('Full Stack Web Developer focused on <strong>user experiences.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(17)\n//               .typeString('<strong>new technologies.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(17)\n//               .typeString('<strong>creative solutions.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(19)\n//               .typeString('<strong>attention to details.<strong>')\n//               .start();\n//           }}\n//         />\n//       </h2>\n//     </div>\n//   );\n// }\nimport React from 'react';\nimport TypeIt from \"typeit-react\";\nexport default function HeaderText() {\n  const YellowText = ({\n    children\n  }) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#ffd84f\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, children);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleFreeze,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, buttonText), /*#__PURE__*/React.createElement(TypeIt, {\n    options: {\n      loop: true\n    },\n    getAfterInit: instance => {\n      setInstance(instance);\n      return instance;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 1\n    }\n  }, \"This will just keep on going.\"), \"/>\"));\n}","map":{"version":3,"sources":["/Users/myrian/Desktop/myrian_portfolio/portfolio/src/components/HeaderText.js"],"names":["React","TypeIt","HeaderText","YellowText","children","color","toggleFreeze","buttonText","loop","instance","setInstance"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACnC,wBAAO;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,QAApC,CAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAyBF;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,UAAhC,CAzBE,eA2BJ,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADX;AAEE,IAAA,YAAY,EAAEC,QAAQ,IAAI;AACxBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACA,aAAOA,QAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA3BI,OADA,CADF;AA0CD","sourcesContent":["// import React from 'react';\n// import Typewriter from 'typewriter-effect';\n\n// export default function Header() {\n//   return (\n//     <div className=\"header-text\">\n//       {/* <h2>\n//         Full Stack Web Developer focused on\n//         <span><Typewriter\n//           options={{\n\n//             strings: [\n//               'user experiences.',\n//               'new technologies.',\n//               'creative solutions.',\n//               'attention to details.',\n//             ],\n//             autoStart: true,\n//             loop: true,\n//             wrapperClassName: 'typewriter-text',\n\n//           }}\n//         /></span>\n//       </h2> */}\n//       <h2>\n//         <Typewriter\n//           onInit={(typewriter) => {\n//             typewriter\n//               .typeString('Full Stack Web Developer focused on <strong>user experiences.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(17)\n//               .typeString('<strong>new technologies.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(17)\n//               .typeString('<strong>creative solutions.<strong>')\n//               .pauseFor(200)\n//               .deleteChars(19)\n//               .typeString('<strong>attention to details.<strong>')\n//               .start();\n//           }}\n//         />\n//       </h2>\n//     </div>\n//   );\n// }\n\nimport React from 'react';\nimport TypeIt from \"typeit-react\";\n\nexport default function HeaderText() {\n  const YellowText = ({ children }) => {\n    return <span style={{ color: \"#ffd84f\" }}>{children}</span>;\n  };\n  return (\n    <div className=\"header-text\">\n    <h2>\n{/*     \n  <TypeIt\n  options={{ loop: true }}\n  getBeforeInit={instance => {\n    instance\n      .type(\"Full Stack Web Developer focused on <YellowText> user experiences.</YellowText>\")\n      .pause(750)\n      .delete(17)\n      .pause(500)\n      .type(\"new technologies.\")\n      .pause(750)\n      .delete(17)\n      .pause(500)\n      .type(\"creative solutions.\")\n      .pause(750)\n      .delete(19)\n      .pause(500)\n      .type(\"solving problems.\");\n\n    // Remember to return it!\n    return instance;\n  }} */}\n\n\n  <button onClick={toggleFreeze}>{buttonText}</button>\n\n<TypeIt\n  options={{ loop: true }}\n  getAfterInit={instance => {\n    setInstance(instance);\n    return instance;\n  }}\n>\n  This will just keep on going.\n</TypeIt>\n\n/></h2>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}